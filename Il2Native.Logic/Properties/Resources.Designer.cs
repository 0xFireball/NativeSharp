//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Il2Native.Logic.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Il2Native.Logic.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Arrays internals
        ///template &lt;typename T&gt; class __array : public &lt;&lt;%assemblyName%&gt;&gt;::System::Array
        ///{
        ///	int32_t _rank;
        ///	int32_t _length;
        ///	T _data[0];
        ///public:
        ///	// TODO: finish checking boundries
        ///	__array(size_t length) : _rank(1) { _length = length; }
        ///	inline const T operator [](size_t index) const { return _data[index]; }
        ///	inline T&amp; operator [](size_t index) { return _data[index]; }
        ///	inline operator size_t() const { return (size_t)_length; }
        ///};
        ///
        ///template &lt;typename T, size_t RANK&gt; class __multi_a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_declarations {
            get {
                return ResourceManager.GetString("c_declarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // __val conversions
        ///template&lt;&gt;
        ///inline __val&lt;intptr_t&gt;::__val(const &lt;&lt;%assemblyName%&gt;&gt;::System::IntPtr&amp; value)
        ///{
        ///	_value = reinterpret_cast&lt;intptr_t&gt;(value.m_value);
        ///}
        ///
        ///// MethodBodyOpt: object.GetType()
        ///&lt;&lt;%assemblyName%&gt;&gt;::System::Type* &lt;&lt;%assemblyName%&gt;&gt;::System::Object::GetType()
        ///{
        ///    throw 0xC000C000;
        ///}
        ///
        ///// MethodBodyOpt: System.Array.GetUpperBound(int)
        ///int32_t &lt;&lt;%assemblyName%&gt;&gt;::System::Array::GetUpperBound(int32_t index)
        ///{
        ///    throw 0xC000C000;
        ///}
        ///
        ///// MethodBodyOpt: System.Array.Ge [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_definitions {
            get {
                return ResourceManager.GetString("c_definitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;cstdint&gt;
        ///#include &lt;functional&gt;
        ///#include &lt;initializer_list&gt;
        ///
        ///template &lt;typename T&gt; class __array;
        ///
        ///template &lt;typename T&gt; struct __val
        ///{
        ///public: 
        ///	T _value;
        ///	inline __val(T value) : _value(value) {}
        ///	__val(const CoreLib::System::IntPtr&amp; value);
        ///	inline operator T() { return _value; }
        ///};
        ///
        ///template &lt;typename T, typename TUnderlying&gt; struct __enum
        ///{
        ///public: 
        ///	TUnderlying _value;
        ///	inline __enum(TUnderlying value) : _value(value) {}
        ///	inline operator TUnderlying() { return _value; }
        ///} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_forward_declarations {
            get {
                return ResourceManager.GetString("c_forward_declarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Arrays internals
        ///template &lt;typename T&gt; class __array : public &lt;&lt;%assemblyName%&gt;&gt;::System::Array
        ///{
        ///	int32_t _rank;
        ///	int32_t _length;
        ///	T _data[0];
        ///public:
        ///	// TODO: finish checking boundries
        ///	__array(size_t length) : _rank(1) { _length = length; }
        ///	inline const T operator [](size_t index) const { return _data[index]; }
        ///	inline T&amp; operator [](size_t index) { return _data[index]; }
        ///	inline operator size_t() const { return (size_t)_length; }
        ///};
        ///
        ///template &lt;typename T, size_t RANK&gt; class __multi_a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_include {
            get {
                return ResourceManager.GetString("c_include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Decimals
        ///extern &quot;C&quot; Double pow(Double value, Double power);
        ///extern &quot;C&quot; Double fabs(Double value);
        ///
        ///typedef union {
        ///	UInt64 int64;
        ///	struct {
        ///#if BIGENDIAN
        ///		UInt32 Hi;
        ///		UInt32 Lo;
        ///#else            
        ///		UInt32 Lo;
        ///		UInt32 Hi;
        ///#endif           
        ///	} u;
        ///} SPLIT64__;
        ///
        ///typedef union{
        ///	struct {
        ///#if BIGENDIAN
        ///		UInt32 sign : 1;
        ///		UInt32 exp : 11;
        ///		UInt32 mantHi : 20;
        ///		UInt32 mantLo;
        ///#else // BIGENDIAN
        ///		UInt32 mantLo;
        ///		UInt32 mantHi : 20;
        ///		UInt32 exp : 11;
        ///		UInt32 sign : 1;
        ///#endif [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string decimals {
            get {
                return ResourceManager.GetString("decimals", resourceCulture);
            }
        }
    }
}
