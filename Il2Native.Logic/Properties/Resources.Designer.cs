//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Il2Native.Logic.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Il2Native.Logic.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Boxing internals
        ///template &lt;typename T, typename = std::enable_if&lt;std::is_base_of&lt;object, T&gt;::value&gt; &gt; inline T* __box (T* t)
        ///{
        ///	return t;
        ///}
        ///
        ///template &lt;typename T&gt; inline T* __box (T t)
        ///{
        ///	return new T(t);
        ///}
        ///
        ///// Unboxing internals
        ///template &lt;typename D, typename S&gt; inline D __unbox(S* c)
        ///{
        ///	// TODO: finish it
        ///	D d;
        ///	return d;
        ///}
        ///
        ///// cast internals
        ///template &lt;typename D, typename S&gt; inline D as(S s)
        ///{
        ///	return dynamic_cast&lt;D&gt;(s);
        ///}
        ///
        ///// cast internals
        ///template &lt;typename D, typename S&gt;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_declarations {
            get {
                return ResourceManager.GetString("c_declarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // String literal
        ///string* operator &quot;&quot; _s(const wchar_t* ptr, size_t length)
        ///{
        ///	auto result = string::FastAllocateString(length);
        ///	std::wcsncpy(&amp;result-&gt;m_firstChar, ptr, length);
        ///	return result;
        ///}.
        /// </summary>
        internal static string c_definitions {
            get {
                return ResourceManager.GetString("c_definitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to template &lt;typename T&gt; struct is_primitive_type : std::integral_constant&lt;bool, std::is_enum&lt;T&gt;::value || std::is_integral&lt;T&gt;::value || std::is_floating_point&lt;T&gt;::value&gt;
        ///{
        ///};
        ///
        ///template &lt;typename T&gt; struct is_struct_type : std::integral_constant&lt;bool, std::is_object&lt;T&gt;::value &amp;&amp; std::is_base_of&lt;object, T&gt;::value&gt;
        ///{
        ///};
        ///
        ///template &lt;typename T&gt; struct is_value_type : std::integral_constant&lt;bool, is_struct_type&lt;T&gt;::value || is_primitive_type&lt;T&gt;::value&gt;
        ///{
        ///};
        ///
        ///template &lt;typename T&gt; struct is_class_type :  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_forward_declarations {
            get {
                return ResourceManager.GetString("c_forward_declarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;cstdint&gt;
        ///#include &lt;functional&gt;
        ///#include &lt;initializer_list&gt;
        ///#include &lt;type_traits&gt;
        ///#include &lt;limits&gt;
        ///#include &lt;cmath&gt;
        ///#include &lt;atomic&gt;
        ///#include &lt;cstring&gt;
        ///#include &lt;cwchar&gt;
        ///#include &lt;thread&gt;
        ///
        ///#ifndef thread_local
        ///# if __STDC_VERSION__ &gt;= 201112 &amp;&amp; !defined __STDC_NO_THREADS__
        ///#  define thread_local _Thread_local
        ///# elif defined _WIN32 &amp;&amp; ( \
        ///       defined _MSC_VER || \
        ///       defined __ICL || \
        ///       defined __DMC__ || \
        ///       defined __BORLANDC__ )
        ///#  define thread_local __dec [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_include {
            get {
                return ResourceManager.GetString("c_include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///// Array
        ///virtual void __array&lt;T&gt;::InternalGetReference(void* elemRef, int32_t rank, int32_t* pIndices) override
        ///{
        ///	auto typedRef = reinterpret_cast&lt;CoreLib::System::TypedReference&amp;&gt;(elemRef);
        ///	typedRef.
        ///}
        ///
        ///// IListT1
        ///T __array&lt;T&gt;::System_Collections_Generic_IListT1_get_Item(int32_t) 
        ///{
        ///	throw 0xC000C000;
        ///}
        ///
        ///void __array&lt;T&gt;::System_Collections_Generic_IListT1_set_Item(int32_t, T)
        ///{
        ///	throw 0xC000C000;
        ///}
        ///
        ///int32_t __array&lt;T&gt;::System_Collections_Generic_IListT1_IndexOf(T)
        ///{
        ///	throw 0xC000C00 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_template_definitions {
            get {
                return ResourceManager.GetString("c_template_definitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Decimals
        ///extern &quot;C&quot; Double pow(Double value, Double power);
        ///extern &quot;C&quot; Double fabs(Double value);
        ///
        ///typedef union {
        ///	UInt64 int64;
        ///	struct {
        ///#if BIGENDIAN
        ///		UInt32 Hi;
        ///		UInt32 Lo;
        ///#else            
        ///		UInt32 Lo;
        ///		UInt32 Hi;
        ///#endif           
        ///	} u;
        ///} SPLIT64__;
        ///
        ///typedef union{
        ///	struct {
        ///#if BIGENDIAN
        ///		UInt32 sign : 1;
        ///		UInt32 exp : 11;
        ///		UInt32 mantHi : 20;
        ///		UInt32 mantLo;
        ///#else // BIGENDIAN
        ///		UInt32 mantLo;
        ///		UInt32 mantHi : 20;
        ///		UInt32 exp : 11;
        ///		UInt32 sign : 1;
        ///#endif [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string decimals {
            get {
                return ResourceManager.GetString("decimals", resourceCulture);
            }
        }
    }
}
