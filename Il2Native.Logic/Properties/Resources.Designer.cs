//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Il2Native.Logic.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Il2Native.Logic.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // interface cast
        ///template &lt;typename C, typename T&gt; 
        ///inline typename std::enable_if&lt;!is_value_type&lt;T&gt;::value, C&gt;::type interface_cast (T t)
        ///{
        ///	if (t == nullptr)
        ///	{
        ///		return nullptr;
        ///	}
        ///
        ///	return t-&gt;operator C();
        ///}
        ///
        ///template &lt;typename C, typename T&gt; 
        ///inline typename std::enable_if&lt;is_value_type&lt;T&gt;::value, C&gt;::type interface_cast (T t)
        ///{
        ///	return t-&gt;operator C();
        ///}
        ///
        ///template &lt;typename C, typename T&gt; 
        ///inline typename std::enable_if&lt;!is_interface_type&lt;T&gt;::value, C&gt;::type dynamic_interface_cast  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_declarations {
            get {
                return ResourceManager.GetString("c_declarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __object_extras_storage __object_extras_storage_instance;
        ///__strings_storage __strings_storage_instance;
        ///
        ///void GC_CALLBACK __finalizer(void * obj, void * client_data)
        ///{
        ///	if (obj == nullptr)
        ///	{
        ///		return;
        ///	}
        ///
        ///	((object*)obj)-&gt;Finalize();
        ///}
        ///
        ///int32_t __hash_code(object* _obj, size_t _size)
        ///{
        ///	if (_obj == nullptr)
        ///	{
        ///		return 0;
        ///	}
        ///
        ///	auto bytes = (int8_t*) _obj;
        ///
        ///	const int32_t p = 16777619;
        ///	auto hash = 2166136261;
        ///
        ///	for (int i = 0; i &lt; _size; i++)
        ///	{
        ///		hash = (hash ^ bytes[i]) * p;
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_definitions {
            get {
                return ResourceManager.GetString("c_definitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // map valuetype to class
        ///template&lt;typename T&gt; 
        ///struct valuetype_to_class { typedef T type; };
        ///
        ///// map class to valuetype
        ///template&lt;typename T&gt; 
        ///struct class_to_valuetype { typedef T type; };
        ///
        ///template &lt;typename T&gt; struct convert_primitive_type_to_class
        ///{
        ///	typedef
        ///		typename std::conditional&lt; std::is_same&lt; T, void &gt;::value, CoreLib::System::Void, 
        ///		typename std::conditional&lt; std::is_same&lt; T, int8_t &gt;::value, CoreLib::System::SByte, 
        ///		typename std::conditional&lt; std::is_same&lt; T, uint8_t &gt;::value [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_forward_declarations {
            get {
                return ResourceManager.GetString("c_forward_declarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;cstdint&gt;
        ///#include &lt;type_traits&gt;
        ///#include &lt;functional&gt;
        ///#include &lt;initializer_list&gt;
        ///#include &lt;limits&gt;
        ///#include &lt;cmath&gt;
        ///#include &lt;cstring&gt;
        ///#include &lt;cwchar&gt;
        ///#include &lt;numeric&gt;
        ///#include &lt;atomic&gt;
        ///#include &lt;thread&gt;
        ///#include &lt;chrono&gt; 
        ///#include &lt;unordered_map&gt;
        ///#include &lt;mutex&gt;
        ///#include &lt;shared_mutex&gt;
        ///#include &lt;condition_variable&gt;
        ///#include &lt;atomic&gt;
        ///
        ///#ifdef _MSC_VER
        ///#include &lt;Windows.h&gt;
        ///#endif
        ///
        ///#ifndef thread_local
        ///# if __STDC_VERSION__ &gt;= 201112 &amp;&amp; !defined __STDC_NO_THREADS__
        ///#  de [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_include {
            get {
                return ResourceManager.GetString("c_include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Array
        ///template &lt;typename T&gt;
        ///int32_t  __array&lt;T&gt;::__array_element_size()
        ///{
        ///	return sizeof(T);
        ///}
        ///
        ///template &lt;typename T&gt;
        ///void __array&lt;T&gt;::InternalGetReference(void* elemRef, int32_t rank, int32_t* pIndices)
        ///{
        ///	if (rank != 1)
        ///	{
        ///		throw __new&lt;CoreLib::System::InvalidOperationException&gt;(L&quot;rank&quot;_s);
        ///	}
        ///
        ///	if (elemRef == nullptr)
        ///	{
        ///		throw __new&lt;CoreLib::System::ArgumentNullException&gt;(L&quot;elemRef&quot;_s);
        ///	}	
        ///
        ///	if (pIndices == nullptr)
        ///	{
        ///		throw __new&lt;CoreLib::System::ArgumentNullException&gt;(L&quot;p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string c_template_definitions {
            get {
                return ResourceManager.GetString("c_template_definitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Decimals
        ///extern &quot;C&quot; double pow(double value, double power);
        ///extern &quot;C&quot; double fabs(double value);
        ///
        ///typedef union {
        ///	uint64_t int64;
        ///	struct {
        ///#if BIGENDIAN
        ///		uint32_t Hi;
        ///		uint32_t Lo;
        ///#else            
        ///		uint32_t Lo;
        ///		uint32_t Hi;
        ///#endif           
        ///	} u;
        ///} SPLIT64__;
        ///
        ///typedef union{
        ///	struct {
        ///#if BIGENDIAN
        ///		uint32_t sign : 1;
        ///		uint32_t exp : 11;
        ///		uint32_t mantHi : 20;
        ///		uint32_t mantLo;
        ///#else // BIGENDIAN
        ///		uint32_t mantLo;
        ///		uint32_t mantHi : 20;
        ///		uint32_t exp : 11;
        ///		 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string decimals {
            get {
                return ResourceManager.GetString("decimals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Impl {
            get {
                object obj = ResourceManager.GetObject("Impl", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #ifdef _MSC_VER
        ///
        ///CoreLib::System::IntPtr _interlocked_exchange(CoreLib::System::IntPtr volatile* location1, CoreLib::System::IntPtr value)
        ///{
        ///	return __init&lt;CoreLib::System::IntPtr&gt;(InterlockedExchangePointer((void* volatile*)&amp;location1-&gt;m_value, value.m_value));
        ///}
        ///
        ///CoreLib::System::IntPtr _interlocked_compare_exchange(CoreLib::System::IntPtr volatile* location1, CoreLib::System::IntPtr value, CoreLib::System::IntPtr comparand)
        ///{
        ///	return __init&lt;CoreLib::System::IntPtr&gt;(InterlockedCompareExchangePoin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string intrin {
            get {
                return ResourceManager.GetString("intrin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CoreLib { namespace System {
        ///	struct IntPtr;
        ///	struct UIntPtr;
        ///}}
        ///
        ///extern CoreLib::System::IntPtr _interlocked_exchange(CoreLib::System::IntPtr volatile* location1, CoreLib::System::IntPtr value);
        ///extern CoreLib::System::IntPtr _interlocked_compare_exchange(CoreLib::System::IntPtr volatile* location1, CoreLib::System::IntPtr value, CoreLib::System::IntPtr comparand);
        ///
        ///extern CoreLib::System::UIntPtr _interlocked_exchange(CoreLib::System::UIntPtr volatile* location1, CoreLib::System::UIntPtr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string intrin_template {
            get {
                return ResourceManager.GetString("intrin_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #ifdef _MSC_VER
        ///
        ///CoreLib::System::IntPtr _interlocked_exchange(CoreLib::System::IntPtr volatile* location1, CoreLib::System::IntPtr value)
        ///{
        ///	return __init&lt;CoreLib::System::IntPtr&gt;(InterlockedExchangePointer((void* volatile*)&amp;location1-&gt;m_value, value.m_value));
        ///}
        ///
        ///CoreLib::System::IntPtr _interlocked_compare_exchange(CoreLib::System::IntPtr volatile* location1, CoreLib::System::IntPtr value, CoreLib::System::IntPtr comparand)
        ///{
        ///	return __init&lt;CoreLib::System::IntPtr&gt;(InterlockedCompareExchangePoin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string overflow {
            get {
                return ResourceManager.GetString("overflow", resourceCulture);
            }
        }
    }
}
